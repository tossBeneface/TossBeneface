name: Deploy to EC2

on:
  push:
    branches:
      - master  # master 브랜치에 push될 때 실행

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PASSWORD: ${{ secrets.PASSWORD }}  # 🔹 GitHub Secrets에서 가져오기
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify gradlew file exists
        run: ls -l gradlew  # GitHub Actions에서 gradlew 파일이 존재하는지 확인

      - name: Grant Execute Permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon

      - name: Copy .env to EC2
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          scp -i ~/.ssh/your-key.pem .env ubuntu@YOUR_EC2_IP:/home/ubuntu/.env      

      - name: Build & Push Docker Image
        run: |
          docker build --build-arg PASSWORD=${{ secrets.PASSWORD }} -t jean202/toss-beneface:latest .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push jean202/toss-beneface:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker stop toss-beneface-container || true
            docker rm toss-beneface-container || true
            docker pull jean202/toss-beneface:latest
            docker run -d -p 8080:8080 --name toss-beneface-container jean202/toss-beneface:latest
